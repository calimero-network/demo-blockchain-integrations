name: Release WASM

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - 'prerelease/*'
    paths:
      - logic/**
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
    paths:
      - logic/**

permissions:
  contents: write
  pull-requests: read

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Install wasm-opt
        run: |
          sudo apt-get update
          sudo apt-get install -y binaryen

      - name: Build WASM
        run: |
          cd logic
          ./build.sh
          
      - name: Compress WASM
        run: |
          cd logic/res
          gzip -9 -k *.wasm
          ls -la

      - name: Debug file locations
        run: |
          find . -name "*.wasm*" -type f

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: logic/res/*.wasm.gz
          name: ${{ startsWith(github.ref, 'refs/heads/prerelease/') && format('Pre-release from {0}', github.ref_name) || format('Release from {0}', github.event.pull_request.title || github.ref_name) }}
          tag_name: ${{ startsWith(github.ref, 'refs/heads/prerelease/') && format('pre-release-{0}', github.sha) || 'latest' }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') }}
          generate_release_notes: true
          body: |
            ${{ github.event.pull_request.body || github.event.head_commit.message }}
            
            Triggered by: ${{ github.event_name == 'pull_request' && format('PR #{0}', github.event.pull_request.number) || format('Commit {0}', github.sha) }}

      - name: Cleanup on failure
        if: failure()
        run: |
          rm -f /tmp/*.wasm*
          rm -f logic/res/*.wasm.gz
